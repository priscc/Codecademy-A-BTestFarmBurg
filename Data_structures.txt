Linked list is a linear data structure. This structure links nodes in a string, using each node to point/refer to the next consecutive node in the structure. Nodes in a singly linked list can only access the next consecutive node after its current position while traversing, however doubly linked list can access both nodes before and after its current position. The benefit of using linked lists the ability to quickly add and or remove nodes in minimal runtime, and without a size limit. Stacks is an abstract data structure. This structure can only add elements to top of the stack using the function push(), and can only remove elements first from the top of the stack using the function pop().Hash Map is an abstract data structure. Hash Maps stores information using a Key and Value pair. The Key & Value pair can be similarly thought of like a Webster Dictionary Ð where a Key is the word being searched and defined, and the Value is the definition of that word. One can only retrieve the information of a Value by calling its Key. Trees is an abstract data structure. Trees are organized in a hierarchal structure, starting with a parent node / one node, and branches off to sub connecting nodes, child nodes. Branches that connect the parent and child node are called edges. The first original node to which all other nodes have branched off from is known as the root. Heaps are tree like data structures that maintain the hierarchal parent-child node relationship. The difference between heaps and trees is that a heap implements a priority queue. A priority queue has two formats, min heap (the value of every parent is less than or equal to its children) and max heap (the value of every parent is greater than or equal to its children). 